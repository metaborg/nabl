package mb.p_raffrayi;

import java.util.Set;

import mb.p_raffrayi.nameresolution.DataWf;
import mb.scopegraph.ecoop21.LabelWf;
import mb.scopegraph.patching.IPatchCollection;

public interface IRecordedQuery<S, L, D> {

    // -- Properties --

    S source();

    Set<S> datumScopes();

    LabelWf<L> labelWf();

    DataWf<S, L, D> dataWf();

    boolean empty();

    /**
     * @return {@code true} for initial and transitive queries, {@code false} for queries raised by predicates.
     */
    boolean includePatches();

    // -- Operations --

    IRecordedQuery<S, L, D> patch(IPatchCollection.Immutable<S> patches);

    // -- Generated by immutables --

    IRecordedQuery<S, L, D> withIncludePatches(boolean includePatches);

}

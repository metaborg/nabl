module statix/runtime/menus

imports
  libstratego-lib

imports

  libspoofax/analysis/constraint

  statix/api
  statix/runtime/-

rules

  stx--show-scopegraph:
      (_, _, _, path, project-path) -> (filename, result)
    where
      a := <stx--get-resource-analysis(stx--get-analysis)> path
    with
      filename := <guarantee-extension(|"scopegraph")> path
    ; sg := <stx--debug-scopegraph> a
    ; result := <pp-Statix-ScopeGraph> sg

  stx--make-project-library:
      (_, _, _, path, project-path) -> (filename, result)
    where
      a* := <stx--get-project-analyses(stx--get-analysis);map(Snd)>
    with
      filename := "project.stxlib"
    ; sg := <stx--get-scopegraph;strip-annos> a*
    ; s* := <collect-all(stx--is-scope, conc); imset-from-list; imset-to-list> sg
    ; result := Library([], s*, sg)

  stx--properties:
      (_, _, _, path, project-path) -> (filename, result)
    where
      a := <stx--get-resource-analysis(stx--get-analysis)> path
    with
      filename := <guarantee-extension(|"stxprops")> path
    ; properties := <stx--get-all-properties(|a)>
    ; result := <pp-Statix-Properties> properties

  stx--ast-properties:
      (_, _, ast, path, project-path) -> (filename, result)
    where
      a := <stx--get-resource-analysis(stx--get-analysis)> path
    with
      filename := <guarantee-extension(|"props.aterm")> path
    ; result := <bottomup(try(stx--add-props-as-annos(|a)))> ast

  stx--diagnostics:
      (_, _, _, path, project-path) -> (filename, result)
    where
      a := <stx--get-resource-analysis(stx--get-result)> path
    with
      filename := <guarantee-extension(|"diagnostics")> path
    ; diagnostics := <stx--incremental-diagnostics(|a)>
    ; result := <pp-Statix-Diagnostics> diagnostics

rules

  stx--add-props-as-annos(|a): term -> term{a'*}
    where
      a*  := <get-annos> term
    ; p*  := <stx-get-ast-properties(|a)> term
    ; a'* := [a*, p*]

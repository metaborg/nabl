module statix/lang/menus

imports

  nabl2/api

  signatures/statix/lang/-
  statix/lang/-
  statix/lang/statics/-
  statix/lang/normalize
  statix/lang/precompile
  statix/lang/transform/-

  pp

rules

  rename-module(|postfix) = try(Module(!$[[<id>].[postfix]], id))

rules // Parsing

  show-parsed-aterm: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"aterm")> path;
         result   := ast

  format-parsed: (_, _, ast, path, project-path) -> (filename, result)
    with ext      := <get-extension> path;
         filename := <guarantee-extension(|$[formatted.[ext]])> path;
         result   := <rename-module(|"formatted");pp-Statix-string> ast

rules // Desugaring

  show-desugared-aterm: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"desugared.aterm")> path;
         result   := <desugar-all;rename-module(|"desugared")> ast

  format-desugared: (_, _, ast, path, project-path) -> (filename, result)
    with ext      := <get-extension> path;
         filename := <guarantee-extension(|$[desugared.[ext]])> path;
         result   := <desugar-all;rename-module(|"desugared");pp-Statix-string> ast

rules // Analysis

  show-analyzed-aterm: (_, _, ast, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|"analyzed.aterm")> path;
         result   := <rename-module(|"analyzed");nabl2-simplify-ast-indices> ast

  format-analyzed: (_, _, ast, path, project-path) -> (filename, result)
    with ext      := <get-extension> path;
         filename := <guarantee-extension(|$[analyzed.[ext]])> path;
         result   := <rename-module(|"analyzed");pp-Statix-string> ast

rules // Normalization

  show-normalized-aterm: (_, _, _, path, project-path) -> (filename, result)
    where ast := <get-normalized-ast>
    with filename := <guarantee-extension(|"normalized.aterm")> path;
         result   := <rename-module(|"normalized");nabl2-simplify-ast-indices> ast

  format-normalized: (_, _, _, path, project-path) -> (filename, result)
    where ast := <get-normalized-ast>
    with ext      := <get-extension> path;
         filename := <guarantee-extension(|$[normalized.[ext]])> path;
         result   := <rename-module(|"normalized");pp-Statix-string> ast

  get-normalized-ast: (_, _, ast, path, project-path) -> ast'
    where a := <nabl2-get-resource-analysis> $[[project-path]/[path]]
    with ast' := <normalize(|a)> ast

rules // Precompilation

  show-precompiled-aterm: (_, _, _, path, project-path) -> (filename, result)
    where ast := <get-precompiled-ast>
    with filename := <guarantee-extension(|"precompiled.aterm")> path;
         result   := <rename-module(|"precompiled");nabl2-simplify-ast-indices> ast

  format-precompiled: (_, _, _, path, project-path) -> (filename, result)
    where ast := <get-precompiled-ast>
    with ext      := <get-extension> path;
         filename := <guarantee-extension(|$[precompiled.[ext]])> path;
         result   := <rename-module(|"precompiled");pp-Statix-string> ast

  get-precompiled-ast: (_, _, ast, path, project-path) -> ast'
    where a := <nabl2-get-resource-analysis> $[[project-path]/[path]]
    with ast' := <normalize(|a); precompile(|a)> ast

rules // Explicit signature rules

  show-signature-rules-aterm: (_, _, _, path, project-path) -> (filename, result)
    where ast := <get-signature-rules-ast>
    with filename := <guarantee-extension(|"signature.aterm")> path;
         result   := <rename-module(|"signature");nabl2-simplify-ast-indices> ast

  format-signature-rules: (_, _, _, path, project-path) -> (filename, result)
    where ast := <get-signature-rules-ast>
    with ext      := <get-extension> path;
         filename := <guarantee-extension(|$[signature.[ext]])> path;
         result   := <rename-module(|"signature");pp-Statix-string> ast

  get-signature-rules-ast: (_, _, ast, path, project-path) -> ast'
    where a := <nabl2-get-resource-analysis> $[[project-path]/[path]];
          <not(nabl2-analysis-has-errors)> a
    with ast' := <add-signature-rules(|a)> ast

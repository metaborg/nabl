package mb.statix.concurrent;

import java.util.List;
import java.util.Map;
import java.util.Optional;

import mb.statix.spec.Rule;

public interface IStatixGroup {

    /**
     * Group resource.
     */
    String resource();

    /**
     * Names of shared scopes to be generated by this group.
     */
    List<String> scopeNames();

    /**
     * Rule for the group.
     */
    Optional<Rule> rule();

    /**
     * true if the constraint for this group changed, false otherwise
     */
    boolean changed();

    /**
     * Direct sub groups of this group.
     */
    Map<String, IStatixGroup> groups();

    /**
     * Direct sub units of this group.
     */
    Map<String, IStatixUnit> units();

    /**
     * @return Number of units in this group (including itself).
     */
    default int size() {
        return 1 + groups().values().stream().mapToInt(IStatixGroup::size).sum() + units().size();
    }

}

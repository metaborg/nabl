module nabl2/runtime/editor/menus

imports
  libstratego-lib

imports

  nabl2/runtime/analysis/-
  nabl2/runtime/prelude/-
  nabl2/runtime/pp
  nabl2/api
  signatures/nabl2/runtime/analysis/-
  signatures/nabl2/runtime/common/-

rules

  nabl2--debug-file-constraints =
    nabl2--debug-file-result(nabl2--debug-constraints|"constraints")

  nabl2--debug-file-scope-graph =
    nabl2--debug-file-result(nabl2--debug-scope-graph|"scope-graph")

  nabl2--debug-file-scope-graph-dot =
    nabl2--debug-file-result(nabl2--debug-scope-graph,scope-graph-to-dot|"scope-graph.dot")

  nabl2--debug-file-name-resolution =
    nabl2--debug-file-result(nabl2--debug-name-resolution|"name-resolution")

  nabl2--debug-file-unifier =
    nabl2--debug-file-result(nabl2--debug-unifier|"unifier")

  nabl2--debug-file-symbolic-constraints =
    nabl2--debug-file-result(nabl2--debug-symbolic-constraints|"symbolic")

  nabl2--debug-file-ast-properties =
    nabl2--debug-file-result(nabl2--debug-ast-properties|"ast-properties")

  nabl2--debug-file-result(s|ext) = nabl2--debug-file-result(s,pp-NaBL2-AnalysisResult|ext)

  nabl2--debug-file-result(s,pp|ext):
    (_, _, _, path, project-path) -> (filename, result)
    with filename := <guarantee-extension(|ext)> path;
         analysis := <nabl2--get-resource-partial-analysis> $[[project-path]/[path]]
    with ( s(|analysis)
         < nabl2--focus-term(|path);pp
         + !"(no result)"
         ) => result

rules

  nabl2--debug-project-constraints =
    nabl2--debug-project-result(nabl2--debug-constraints|"constraints")

  nabl2--debug-project-scope-graph =
    nabl2--debug-project-result(nabl2--debug-scope-graph|"scope-graph")

  nabl2--debug-project-scope-graph-dot =
    nabl2--debug-project-result(nabl2--debug-scope-graph,scope-graph-to-dot|"scope-graph.dot")

  nabl2--debug-project-name-resolution =
    nabl2--debug-project-result(nabl2--debug-name-resolution|"name-resolution")

  nabl2--debug-project-unifier =
    nabl2--debug-project-result(nabl2--debug-unifier|"unifier")

  nabl2--debug-project-symbolic-constraints =
    nabl2--debug-project-result(nabl2--debug-symbolic-constraints|"symbolic")

  nabl2--debug-project-ast-properties =
    nabl2--debug-project-result(nabl2--debug-ast-properties|"ast-properties")

  nabl2--debug-project-result(s|ext) = nabl2--debug-project-result(s,pp-NaBL2-AnalysisResult|ext)

  nabl2--debug-project-result(s,pp|ext):
    (_, _, _, path, project-path) -> (filename, result)
    with filename := $[[project-path]/project.[ext]];
         analysis := <nabl2--get-resource-analysis> project-path
    with ( s(|analysis)
         < nabl2--focus-term(|path);pp
         + !"(no result)"
         ) => result
